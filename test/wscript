#!/usr/bin/env python
import sys, os

components = ['gtest', '..']
recurse    = lambda ctx : map(lambda proj: ctx.recurse(proj), components)

def check_version_cxx(cfg):
    error = "g++-4.7, clang-3.1 or newer required"

    cfg.check_cxx(
        msg      = "Checking compiler version",
        okmsg    = "ok",
        errmsg   = error,
        type     = "cxx",
        cxxflags = "-std=c++0x",
        execute  = False,
        fragment = """
                       #if __cplusplus != 201103L
                         #error %(MSG)s
                       #endif
                   """ % { "MSG" : error })

def options(opt):
    opt.load('g++')
    opt.load('boost')

    recurse(opt)

def configure(cfg):
    cfg.load('g++')
    cfg.load('boost')

    check_version_cxx(cfg)

    recurse(cfg)

    cfg.check_boost(
            lib='serialization system thread',
            uselib_store='BOOST')

def build(bld):
    recurse(bld)

    bld(
        target          = 'main',
        features        = 'cxx cxxprogram',
        source          = bld.path.ant_glob('*.cc'),
        use             = ['ZTL', 'BOOST', 'gtest'],
        install_path    = 'bin',
        cxxflags        = [
                '-g',
                '-O1',
                '-std=c++0x',
                '-Wall',
                '-Wextra',
                '-pedantic',
                '-ftemplate-depth=3000',
                #'-D_GLIBCXX_PROFILE',
                #'-D_GLIBCXX_DEBUG'
            ],
        includes       = '.',
    )

#!/usr/bin/env python
import sys, os

def check_version_cc(cfg):
    if int(cfg.env.CC_VERSION[1]) < 7 or \
            cfg.env.CXX_NAME != 'gcc':
        cfg.fatal('ZTL requires compiler: >= gcc-4.7')

def options(opt):
    opt.load('g++')
    opt.load('boost')

def configure(cfg):
    cfg.load('g++')
    cfg.load('boost')

    check_version_cc(cfg)

    cfg.check_boost(
            lib='serialization system thread',
            uselib_store='BOOST')

    cfg.env.CXXFLAGS_0TLTEST = [
            '-std=c++0x',
            '-g', '-O1',
            '-pedantic',
            '-Wall',
            '-Wextra',
            '-ftemplate-depth=1500',
            #'-D_GLIBCXX_PROFILE',
            #'-D_GLIBCXX_DEBUG',
            ]

    cfg.env.LIB_0TLTEST     = [ 'gtest', 'pthread']

    cfg.check_cxx(
            msg          = "Checking for GoogleTest",
            header_name  = 'gtest/gtest.h',
            lib          = ['gtest', 'pthread'],
            uselib_store = 'GTEST')


def build(bld):

    tests = [
            "test_array.cc",
            "test_tree.cc",
            "test_pack.cc",
            "test_numeric.cc",
            "test_functional.cc",
            ];

    bld(
        target          = 'main',
        features        = 'cxx cxxprogram',
        source          = ['main.cc',] + tests,
        use             = ['0TLTEST', 'GTEST', 'BOOST'],
    )
